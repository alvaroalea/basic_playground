10 REM \c 2003 Alvaro Alea Fenandez, ALEAsoft , Distribuido bajo licencia GPL Version 2        Dedicado a Covadonga20 LET a$ =  INKEY$  :  IF a$ = "o" AND  PEEK  ( 5e4 +  ( 32 *  ( cy + 1 )  )  + cx - 1 )  <> 0 THEN  LET cx1 = cx - 1 :  GOTO 7030 IF a$ = "p" AND  PEEK  ( 5e4 +  ( 32 *  ( cy + 1 )  )  + cx + 1 )  <> 0 THEN  LET cx1 = cx + 1 :  GOTO 7040 IF a$ = "a" AND  PEEK  ( 5e4 +  ( 32 *  ( cy + 1 )  )  + cx )  = 10 THEN  LET cy1 = cy + 1 :  GOTO 7050 IF a$ = "q" AND  PEEK  ( 5e4 +  ( 32 *  ( cy )  )  + cx )  = 10 THEN  LET cy1 = cy - 1 :  GOTO 7060 IF a$ = "t" THEN  GOTO 113070 IF cx <> cx1 OR cy <> cy1 THEN  GOSUB 23080 IF hpend > 0 THEN  GOSUB 40090 IF hlistas = 6 THEN  GOTO 1100100 IF cx = px AND cy = py THEN  GOTO 1050110 IF cx = mx AND cy = my THEN  GOTO 1050120 LET r =  RND  :  IF r < 0.25 AND  PEEK  ( 5e4 +  ( 32 *  ( py + 1 )  )  + px - 1 )  <> 0 THEN  LET px1 = px - 1 :  GOTO 170130 IF r < 0.5 AND  PEEK  ( 5e4 +  ( 32 *  ( py + 1 )  )  + px + 1 )  <> 0 THEN  LET px1 = px + 1 :  GOTO 170140 IF r < 0.75 AND  PEEK  ( 5e4 +  ( 32 *  ( py + 1 )  )  + px )  = 10 THEN  LET py1 = py + 1 :  GOTO 170150 IF  PEEK  ( 5e4 +  ( 32 *  ( py )  )  + px )  = 10 THEN  LET py1 = py - 1 :  GOTO 170160 IF px1 = px AND py1 = py THEN  GOTO 120170 GOSUB 300 :  IF  RND  < 0.15 THEN  GOTO 20180 IF my > cy AND  PEEK  ( 5E4 +  ( 32 *  ( my )  )  + mx )  = 10 THEN  LET my1 = my - 1 :  GOSUB 350 :  GOTO 20190 IF my < cy AND  PEEK  ( 5E4 +  ( 32 *  ( my + 1 )  )  + mx )  = 10 THEN  LET my1 = my + 1 :  GOSUB 350 :  GOTO 20200 IF cx < mx AND  PEEK  ( 5E4 +  ( 32 *  ( my + 1 )  )  + mx - 1 )  <> 0 THEN  LET mx1 = mx - 1 :  GOSUB 350 :  GOTO 20210 IF  PEEK  ( 5e4 +  ( 32 *  ( my + 1 )  )  + mx + 1 )  <> 0 THEN  LET mx1 = mx + 1 :  GOSUB 350 :  GOTO 20220 LET mx1 = mx1 - 1 :  GOSUB 350 :  GOTO 20230 IF  PEEK  ( 5e4 +  ( 32 * cy )  + cx )  = 10 THEN  PRINT  INK 5 ;  AT cy , cx ; "\udg(G)" :  GOTO 250240 PRINT  AT cy , cx ; " "250 IF  PEEK  ( 5e4 +  ( 32 *  ( cy - 1 )  )  + cx )  = 10 THEN  PRINT  INK 5 ;  AT cy - 1 , cx ; "\udg(G)" :  GOTO 270260 PRINT  AT cy - 1 , cx ; " "270 PRINT  INK 7 ;  AT cy1 - 1 , cx1 ; "\udg(I)" ;  AT cy1 , cx1 ; "\udg(J)" :  LET cx = cx1 :  LET cy = cy1280 IF  PEEK  ( 5e4 +  ( 32 *  ( 1 + cy )  )  + cx )  = 2 THEN  GOSUB 910290 RETURN 300 IF  PEEK  ( 5e4 +  ( 32 *  ( py - 1 )  )  + px )  = 10 THEN  PRINT  INK 5 ;  AT py - 1 , px ; "\udg(G)" :  GOTO 320310 PRINT  AT py - 1 , px ; " "320 IF  PEEK  ( 5e4 +  ( 32 *  ( py )  )  + px )  = 10 THEN  PRINT  INK 5 ;  AT py , px ; "\udg(G)" :  GOTO 340330 PRINT  AT py , px ; " "340 LET py = py1 :  LET px = px1 :  PRINT  INK 4 ;  AT py - 1 , px ; "\udg(M)" ;  AT py , px ; "\udg(N)" :  RETURN 350 IF  PEEK  ( 5e4 +  ( 32 *  ( my - 1 )  )  + mx )  = 10 THEN  PRINT  INK 5 ;  AT my - 1 , mx ; "\udg(G)" :  GOTO 370360 PRINT  AT my - 1 , mx ; " "370 IF  PEEK  ( 5e4 +  ( 32 *  ( my )  )  + mx )  = 10 THEN  PRINT  INK 5 ;  AT my , mx ; "\udg(G)" :  GOTO 390380 PRINT  AT my , mx ; " "390 LET my = my1 :  LET mx = mx1 :  PRINT  INK 6 ;  AT my - 1 , mx ; "\udg(K)" ;  AT my , mx ; "\udg(L)" :  RETURN 400 LET d = 51e3410 IF  PEEK d = 0 THEN  RETURN 420 IF  PEEK  ( d + 2 )  <> 2 THEN  LET d = d + nc :  GOTO 410430 IF  PEEK  ( d + 1 )  =  PEEK  ( d + 7 )  THEN  POKE d + 2 , 0 :  LET hpend = hpend - 1 :  LET hlistas = hlistas + 1 :  LET d = d + nc :  LET punt = punt + 25 :  GOSUB 520 :  GOTO 410440 PRINT  AT  PEEK  ( d + 1 )  ,  PEEK d ; "   " :  POKE d + 1 ,  PEEK  ( d + 1 )  + 1 :  LET d1 =  PEEK  ( d + 1 )  :  PRINT  AT  PEEK  ( d + 1 )  ,  PEEK d ;  INK  PEEK  ( d + 5 )  ;  CHR$  PEEK  ( d + 6 )  ;  CHR$  ( 1 +  PEEK  ( d + 6 )  )  ;  CHR$  ( 2 +  PEEK  ( d + 6 )  )  :  IF  INT  ( d1 / 4 )  * 4 <> d1 THEN  LET d = d + nc :  GOTO 410450 LET hpend = hpend - 1 :  POKE d + 2 , 0 :  POKE d + 3 , 0 :  POKE d + 4 , 0460 LET f = 51e3470 IF  PEEK f = 0 THEN  GOTO 510480 IF d = f OR  PEEK f <>  PEEK d OR  PEEK  ( f + 1 )  <>  PEEK  ( d + 1 )  THEN  LET f = f + nc :  GOTO 470490 POKE f + 1 ,  PEEK  ( f + 1 )  + 1 :  POKE f + 2 , 2 :  POKE f + 3 , 0 :  POKE f + 4 , 0 :  LET hpend = hpend + 1500 PRINT  AT  PEEK  ( f + 1 )  ,  PEEK f ;  INK  PEEK  ( f + 5 )  ;  CHR$  PEEK  ( f + 6 )  ;  CHR$  ( 1 +  PEEK  ( f + 6 )  )  ;  CHR$  ( 2 +  PEEK  ( f + 6 )  ) 510 LET d = d + nc :  GOTO 410520 INK 7 :  PRINT  AT 0 , 0 ; "BURGER TIME SCORE:" ;  :  IF punt < 1000 THEN  PRINT "0" ; 530 IF punt < 100 THEN  PRINT "0" ; 540 IF punt < 10 THEN  PRINT "0" ; 550 PRINT punt ; " HISC:" ;  :  IF hipunt < 1000 THEN  PRINT "0" ; 560 IF hipunt < 100 THEN  PRINT "0" ; 570 IF hipunt < 10 THEN  PRINT "0" ; 580 PRINT hipunt :  RETURN 590 LET A = 20 -  ( 3 * VIDAS )  :  FOR B = 5 TO 20 STEP 3 :  PRINT  INK 7 ;  AT B , 0 ; " " ;  AT B + 1 , 0 ; " " :  IF B > A THEN  PRINT  INK 7 ;  AT B , 0 ; "\udg(I)" ;  AT B + 1 , 0 ; "\udg(J)"600 NEXT B :  RETURN 610 CLS  :  PRINT  AT 0 , 0 ; "DIBUJANDO MAPA, ESPERE POR FAVOR" :  FOR B = 0 TO 32 * 20 :  POKE 5E4 + B , 0 :  NEXT B :  RESTORE 620620 DATA 1 , 26 , 3 , 4 , 1 , 26 , 3 , 8 , 1 , 11 , 3 , 12 , 1 , 11 , 18 , 12 , 1 , 26 , 3 , 16 , 10 , 12 , 5 , 4 , 10 , 12 , 27 , 4 , 10 , 8 , 12 , 4 , 10 , 4 , 19 , 12630 DATA 2 , 3 , 8 , 19 , 2 , 3 , 22 , 19 , 2 , 3 , 22 , 4 , 2 , 3 , 8 , 16 , 2 , 3 , 8 , 12 , 2 , 3 , 8 , 8 , 2 , 3 , 22 , 16 , 2 , 3 , 22 , 12 , 2 , 3 , 22 , 8 , 0640 DATA 17 , 8 , 8 , 8 , 12 , 8 , 16 , 17 , 22 , 4 , 22 , 8 , 22 , 12 , 0650 READ A660 IF A = 0 THEN  GOTO 750670 IF A = 1 THEN  LET p$ = "\udg(H)" :  INK 3680 IF a = 2 THEN  LET p$ = "_" :  INK 7690 IF a = 10 THEN  LET p$ = "\udg(G)" :  INK 5700 READ n :  READ x :  READ y :  FOR B = 1 TO n :  PRINT  AT Y , X ; p$ :  POKE 5E4 +  ( 32 * Y )  + X , A710 IF A < 10 THEN  LET X = X + 1720 IF A >= 10 THEN  LET Y = Y + 1730 NEXT B740 GOTO 650750 GOSUB 770760 LET py1 = 15 :  LET px1 = 28 :  GOSUB 340 :  LET my1 = 15 :  LET mx1 = 3 :  GOSUB 390 :  LET cx1 = 15 :  LET cy1 = 15 :  GOSUB 270 :  GOSUB 590 :  GOSUB 520 :  GOTO 20770 LET HAMB = 0 :  LET dh = 51e3780 READ t :  IF t = 0 THEN  GOTO 890790 READ x , y800 POKE dh , x :  POKE dh + 1 , y :  POKE dh + 2 , 0 :  POKE dh + 3 , 0 :  POKE dh + 4 , 0 :  POKE dh + 5 , 2 :  POKE dh + 6 , 144 :  POKE dh + 7 , t :  LET dh = dh + nc810 PRINT  INK 2 ;  AT y , x ; "\udg(ABC)"820 READ x , y830 POKE dh , x :  POKE dh + 1 , y :  POKE dh + 2 , 0 :  POKE dh + 3 , 0 :  POKE dh + 4 , 0 :  POKE dh + 5 , 4 :  POKE dh + 6 , 147 :  POKE dh + 7 , t + 1 :  LET dh = dh + nc840 PRINT  INK 4 ;  AT y , x ; "\udg(DEF)"850 READ x , y860 POKE dh , x :  POKE dh + 1 , y :  POKE dh + 2 , 0 :  POKE dh + 3 , 0 :  POKE dh + 4 , 0 :  POKE dh + 5 , 2 :  POKE dh + 6 , 144 :  POKE dh + 7 , t + 2 :  LET dh = dh + nc870 PRINT  INK 2 ;  AT y , x ; "\udg(ABC)"880 LET hamb = hamb + 1 :  GOTO 780890 POKE dh , 0 :  POKE dh + 1 , 0900 RETURN 910 LET d = 51e3920 IF  PEEK  ( d + 1 )  = 0 THEN  RETURN 930 IF  PEEK  ( d + 1 )  <>  ( cy + 1 )  THEN  LET d = d + nc :  GOTO 920940 IF  PEEK d > cx THEN  LET d = d + nc :  GOTO 920950 LET dif = cx -  PEEK d :  IF dif > 2 THEN  LET d = d + nc :  GOTO 920960 POKE d + 2 + dif , 1970 PRINT  AT  PEEK  ( d + 1 )  ,  (  PEEK d )  + dif ;  INK  PEEK  ( d + 5 )  ;  BRIGHT 0 ;  CHR$  ( dif +  PEEK  ( d + 6 )  ) 980 LET punt = punt + 1 :  GOSUB 520990 IF  PEEK  ( d + 2 )  = 0 OR  PEEK  ( d + 3 )  = 0 OR  PEEK  ( d + 4 )  = 0 THEN  RETURN 1000 PRINT  AT  PEEK  ( d + 1 )  ,  PEEK d ;  INK 7 ; "___" ;  INK  PEEK  ( d + 5 )  ;  AT  PEEK  ( d + 1 )  + 1 ,  PEEK d ;  CHR$  PEEK  ( d + 6 )  ;  CHR$  ( 1 +  PEEK  ( d + 6 )  )  ;  CHR$  ( 2 +  PEEK  ( d + 6 )  ) 1010 LET punt = punt + 4 :  GOSUB 5201020 POKE d + 1 ,  PEEK  ( d + 1 )  + 1 :  POKE d + 2 , 21030 LET hpend = hpend + 11040 RETURN 1050 LET vidas = vidas - 11060 BORDER 2 :  BEEP 1 , 0 :  BORDER 11070 IF vidas = 0 THEN  GOTO 11301080 GOSUB 5901090 LET px1 = 28 :  LET py1 = 15 :  GOSUB 300 :  LET mx1 = 3 :  LET my1 = 15 :  GOSUB 350 :  LET cx1 = 15 :  LET cy1 = 15 :  GOSUB 270 :  GOTO 201100 PRINT  INK 7 ;  AT 9 , 6 ;  FLASH 1 ; "                  " ;  AT 10 , 6 ; " NIVEL COMPLETADO " ;  AT 11 , 6 ; "                  " :  BEEP 1 , 10 :  PAUSE 01110 IF  INKEY$  <> "" THEN  GOTO 11101120 PAUSE 1 :  PAUSE 0 :  LET hlistas = 0 :  LET hpend = 0 :  GOTO 6101130 PRINT  INK 7 ;  AT 9 , 10 ;  FLASH 1 ; "           " ;  AT 10 , 10 ; " GAME OVER " ;  AT 11 , 10 ; "           "1140 IF hipunt < punt THEN  LET hipunt = punt1150 IF  INKEY$  <> "" THEN  GOTO 11501160 PAUSE 1 :  PAUSE 01170 BORDER 1 :  INK 7 :  PAPER 0 :  BRIGHT 1 :  FLASH 0 :  CLS  :  PRINT  AT 2 , 12 ; "BURGER" ;  AT 3 , 13 ; "TIME" ;  FLASH 1 ;  AT 18 , 1 ; " PULSE UNA TECLA PARA EMPEZAR " ;  FLASH 0 ;  AT 20 , 1 ; "\c 2003 Alvaro Alea - " ;  INK 2 ; "A" ;  INK 6 ; "L" ;  INK 4 ; "E" ;  INK 1 ; "A" ;  INK 3 ; "soft"1180 PRINT  AT 3 , 26 ; "\udg(I)" ;  AT 4 , 26 ; "\udg(J)" ;  AT 2 , 5 ;  INK 2 ; "\udg(ABC)" ;  AT 4 , 5 ; "\udg(ABC)" ;  AT 2 , 21 ; "\udg(ABC)" ;  AT 4 , 21 ; "\udg(ABC)" ;  INK 4 ;  AT 3 , 5 ; "\udg(DEF)" ;  AT 3 , 21 ; "\udg(DEF)" ;  INK 3 ;  AT 5 , 0 ; "\udg(HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH)" ;  INK 7 ;  AT 8 , 2 ; "Movimientos: O,P,Q,A" ;  AT 10 , 2 ; "Instrucciones: Pasa por en-     cima de los ingredientes        de las hamburgesas mientras     evitas al pimiento y la man-    cha de mostaza, El nivel        acaba cuando tengas todas       las Hamburgesas listas." :  PAUSE 0 :  LET hlistas = 0 :  LET hpend = 0 :  LET punt = 0 :  LET vidas = 3 :  GOTO 6101190 DATA 31 , 127 , 255 , 239 , 255 , 253 , 127 , 31 , 255 , 255 , 183 , 255 , 254 , 247 , 255 , 255 , 248 , 254 , 223 , 251 , 255 , 239 , 254 , 248 , 62 , 65 , 144 , 140 , 131 , 170 , 88 , 7 , 251 , 4 , 0 , 139 , 36 , 48 , 40 , 231 , 158 , 98 , 1 , 137 , 70 , 129 , 65 , 190 , 66 , 126 , 66 , 66 , 66 , 126 , 66 , 66 , 255 , 133 , 133 , 133 , 255 , 145 , 145 , 255 , 126 , 255 , 255 , 66 , 60 , 60 , 36 , 66 , 66 , 60 , 255 , 60 , 60 , 60 , 66 , 66 , 0 , 60 , 126 , 255 , 215 , 255 , 255 , 255 , 207 , 199 , 199 , 199 , 231 , 126 , 124 , 90 , 96 , 44 , 118 , 178 , 72 , 150 , 129 , 193 , 230 , 116 , 252 , 252 , 120 , 120 , 132 , 1321200 CLEAR 49999 :  RANDOMIZE  :  LET nc = 8 :  LET hipunt = 0 :  RESTORE 1190 :  FOR b = 0 TO 14 * 8 - 1 :  READ a :  POKE  USR "A" + b , a :  NEXT b :  GOTO 11701210 CLEAR  :  SAVE "BURGER" LINE 1200